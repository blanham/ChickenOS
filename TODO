ChickenOS TODO
===============================================================================

Core
===============================================================================
-Improve quality of comments and commit messages
-Need to implement synchronization primitives
-Build a testing infrastructure
-Use tables of function pointers for device drivers, tests and other things
 http://linuxgazette.net/157/amurray.html 

Console
===============================================================================
-Modify the kernel's printf to output info separately from tty0
-Improve keyboard support (Seem to run into issues with Newlib's getc)
-Actually queue keycodes
-Implement line disciplines (raw and cooked mode)
-Proper blocking I/O

Threads
===============================================================================
-Fuck it, lets rewrite the whole thing
-Fix fork()
-Implement passing open files to child threads
-Implement wait queue
-May have to change/rewrite the scheduler

Userspace
===============================================================================
-Continue adding missing system calls to Newlib port
-Figure out why C++ binaries crash
-Get dash working properly
-Port coreutils or busybox
-Port binutils/gcc/nasm
-Port vim
-Port links/lynx
-Implement dynamic loading of libraries

Syscalls
===============================================================================
-poll()
-select()
-termios stuff
-various fs calls
-GCC:
	wait4
	read
	write
	open
	close
	stat
	fstat
	lstat
	lseek
	mmap
	mprotect
	munmap
	brk
	rt_sigaction
	ioctl
	access
	dup2
	getpid
	vfork
	execve
	fcntl
	unlink
	readlink
	chmod
	umask
	getrlimit
	getrusage
	arch_prctl
	setrlimit

Network
===============================================================================
-Rewrite in progress
-Implement local sockets
-Try to figure out why we crash Virtualbox (and the host system) using the
 AM7990 driver
-Add NE9000 driver
-Add Intel 2200BG WiFi driver (can probably port iwi from openbsd or linux) 
 (if I do this, abstract out all system specific calls, so other osdev people
 can use the driver)
 and then port wpa_supplicant 
 (trivial: http://hostap.epitest.fi/wpa_supplicant/devel/porting.html) 

Filesystem
===============================================================================
-Implement ext2 write support - actually done, just needs new/extensible 
 file/directory support
-Implement fat12/16/32 support
-Need to add support for select()
-Maybe implement ISO9660 support for reading CDs
-Add a block cache (can likely use pintos code for reference)
-Continue work on the network filesystem, and maybe add NFS support

Sound
===============================================================================
-Implement Soundblaster 16 support
-AC97 support may not be that hard to implement

Video
===============================================================================
-Somehow get VBE/VESA to work so we can have something better than a simple 80
 column terminal (partially done)
-Get linear framebuffer to work so we can do video (partially done)
-get X11 working (EXTREMELY AMBITIOUS)
-port SDL (has been done by other hobbiest OSes)
